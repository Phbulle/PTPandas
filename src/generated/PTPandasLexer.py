# Generated from grammar/PTPandas.g4 by ANTLR 4.13.2
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,10,92,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,2,
        6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,
        0,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,2,1,2,1,3,1,3,1,3,1,4,1,4,1,4,1,
        4,1,4,1,4,1,4,1,4,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,5,1,6,1,
        6,5,6,63,8,6,10,6,12,6,66,9,6,1,7,1,7,5,7,70,8,7,10,7,12,7,73,9,
        7,1,7,1,7,1,8,4,8,78,8,8,11,8,12,8,79,1,8,1,8,1,9,1,9,5,9,86,8,9,
        10,9,12,9,89,9,9,1,9,1,9,0,0,10,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,
        8,17,9,19,10,1,0,5,3,0,65,90,95,95,97,122,4,0,48,57,65,90,95,95,
        97,122,1,0,34,34,3,0,9,10,13,13,32,32,2,0,10,10,13,13,95,0,1,1,0,
        0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,
        0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,1,21,1,0,0,0,
        3,30,1,0,0,0,5,36,1,0,0,0,7,39,1,0,0,0,9,42,1,0,0,0,11,50,1,0,0,
        0,13,60,1,0,0,0,15,67,1,0,0,0,17,77,1,0,0,0,19,83,1,0,0,0,21,22,
        5,67,0,0,22,23,5,65,0,0,23,24,5,82,0,0,24,25,5,82,0,0,25,26,5,69,
        0,0,26,27,5,71,0,0,27,28,5,65,0,0,28,29,5,82,0,0,29,2,1,0,0,0,30,
        31,5,68,0,0,31,32,5,65,0,0,32,33,5,68,0,0,33,34,5,79,0,0,34,35,5,
        83,0,0,35,4,1,0,0,0,36,37,5,68,0,0,37,38,5,69,0,0,38,6,1,0,0,0,39,
        40,5,69,0,0,40,41,5,77,0,0,41,8,1,0,0,0,42,43,5,77,0,0,43,44,5,79,
        0,0,44,45,5,83,0,0,45,46,5,84,0,0,46,47,5,82,0,0,47,48,5,65,0,0,
        48,49,5,82,0,0,49,10,1,0,0,0,50,51,5,67,0,0,51,52,5,65,0,0,52,53,
        5,66,0,0,53,54,5,69,0,0,54,55,5,67,0,0,55,56,5,65,0,0,56,57,5,76,
        0,0,57,58,5,72,0,0,58,59,5,79,0,0,59,12,1,0,0,0,60,64,7,0,0,0,61,
        63,7,1,0,0,62,61,1,0,0,0,63,66,1,0,0,0,64,62,1,0,0,0,64,65,1,0,0,
        0,65,14,1,0,0,0,66,64,1,0,0,0,67,71,5,34,0,0,68,70,8,2,0,0,69,68,
        1,0,0,0,70,73,1,0,0,0,71,69,1,0,0,0,71,72,1,0,0,0,72,74,1,0,0,0,
        73,71,1,0,0,0,74,75,5,34,0,0,75,16,1,0,0,0,76,78,7,3,0,0,77,76,1,
        0,0,0,78,79,1,0,0,0,79,77,1,0,0,0,79,80,1,0,0,0,80,81,1,0,0,0,81,
        82,6,8,0,0,82,18,1,0,0,0,83,87,5,35,0,0,84,86,8,4,0,0,85,84,1,0,
        0,0,86,89,1,0,0,0,87,85,1,0,0,0,87,88,1,0,0,0,88,90,1,0,0,0,89,87,
        1,0,0,0,90,91,6,9,0,0,91,20,1,0,0,0,5,0,64,71,79,87,1,6,0,0
    ]

class PTPandasLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    CARREGAR = 1
    DADOS = 2
    DE = 3
    EM = 4
    MOSTRAR = 5
    CABECALHO = 6
    ID = 7
    STRING = 8
    WS = 9
    COMENTARIO = 10

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'CARREGAR'", "'DADOS'", "'DE'", "'EM'", "'MOSTRAR'", "'CABECALHO'" ]

    symbolicNames = [ "<INVALID>",
            "CARREGAR", "DADOS", "DE", "EM", "MOSTRAR", "CABECALHO", "ID", 
            "STRING", "WS", "COMENTARIO" ]

    ruleNames = [ "CARREGAR", "DADOS", "DE", "EM", "MOSTRAR", "CABECALHO", 
                  "ID", "STRING", "WS", "COMENTARIO" ]

    grammarFileName = "PTPandas.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.2")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


